// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace AUT_WH.MajorDomoProtocol
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public enum EProtocolVersion : sbyte
{
  MAJOR = 0,
  REVISION = 1,
  MINOR = 7,
};

/// Types of entity values
public enum EntityValueType : sbyte
{
  Boolean = 0,
  Byte = 1,
  Int16 = 2,
  Int32 = 3,
  Int64 = 4,
  Float32 = 5,
  Float64 = 6,
  String = 7,
  Color = 8,
  Vector3D = 9,
  Quaternion = 10,
  ByteArray = 11,
  FloatArray = 12,
};

/// Entity properties
[System.FlagsAttribute]
public enum EntityProperties : ushort
{
  SharedControl = 1,
  Persistent = 2,
};

public enum URemoteControlCommand : byte
{
  NONE = 0,
  RemoteControlCommand_StopServer = 1,
};

/// Union for gathering all types of client requests
public enum UClientRequest : byte
{
  NONE = 0,
  ClReq_ClientConnect = 1,
  ClReq_ClientDisconnect = 2,
  ClReq_GetClientList = 3,
  ClReq_GetEntityList = 4,
  ClReq_PublishEntities = 5,
  ClReq_RevokeEntities = 6,
  ClReq_RequestEntityControl = 7,
  ClReq_ReleaseEntityControl = 8,
  ClReq_ClientBroadcast = 9,
  ClReq_RemoteControlCommand = 10,
};

/// Union for gathering all types of server replies to the client requests
public enum UServerReply : byte
{
  NONE = 0,
  SvRep_ClientConnect = 1,
  SvRep_ClientDisconnect = 2,
  SvRep_GetClientList = 3,
  SvRep_GetEntityList = 4,
  SvRep_PublishEntities = 5,
  SvRep_RevokeEntities = 6,
  SvRep_RequestEntityControl = 7,
  SvRep_ReleaseEntityControl = 8,
  SvRep_ClientBroadcast = 9,
  SvRep_RemoteControlCommand = 10,
  SvRep_Error = 11,
};

/// Union for all types of server events
public enum UServerEvent : byte
{
  NONE = 0,
  ServerEvent_ClientConnected = 1,
  ServerEvent_ClientDisconnected = 2,
  ServerEvent_EntitiesPublished = 3,
  ServerEvent_EntitiesRevoked = 4,
  ServerEvent_EntitiesChangedClient = 5,
  ServerEvent_ClientBroadcast = 6,
  ServerEvent_ServerShutdown = 7,
};

/// Version number
public struct Version : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Version __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte NumMajor { get { return __p.bb.Get(__p.bb_pos + 0); } }
  public void MutateNumMajor(byte numMajor) { __p.bb.Put(__p.bb_pos + 0, numMajor); }
  public byte NumMinor { get { return __p.bb.Get(__p.bb_pos + 1); } }
  public void MutateNumMinor(byte numMinor) { __p.bb.Put(__p.bb_pos + 1, numMinor); }
  public ushort NumRevision { get { return __p.bb.GetUshort(__p.bb_pos + 2); } }
  public void MutateNumRevision(ushort numRevision) { __p.bb.PutUshort(__p.bb_pos + 2, numRevision); }

  public static Offset<AUT_WH.MajorDomoProtocol.Version> CreateVersion(FlatBufferBuilder builder, byte NumMajor, byte NumMinor, ushort NumRevision) {
    builder.Prep(2, 4);
    builder.PutUshort(NumRevision);
    builder.PutByte(NumMinor);
    builder.PutByte(NumMajor);
    return new Offset<AUT_WH.MajorDomoProtocol.Version>(builder.Offset);
  }
};

/// Color (ARGB, 32 bit)
public struct Color : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Color __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public sbyte A { get { return __p.bb.GetSbyte(__p.bb_pos + 0); } }
  public void MutateA(sbyte a) { __p.bb.PutSbyte(__p.bb_pos + 0, a); }
  public sbyte R { get { return __p.bb.GetSbyte(__p.bb_pos + 1); } }
  public void MutateR(sbyte r) { __p.bb.PutSbyte(__p.bb_pos + 1, r); }
  public sbyte G { get { return __p.bb.GetSbyte(__p.bb_pos + 2); } }
  public void MutateG(sbyte g) { __p.bb.PutSbyte(__p.bb_pos + 2, g); }
  public sbyte B { get { return __p.bb.GetSbyte(__p.bb_pos + 3); } }
  public void MutateB(sbyte b) { __p.bb.PutSbyte(__p.bb_pos + 3, b); }

  public static Offset<AUT_WH.MajorDomoProtocol.Color> CreateColor(FlatBufferBuilder builder, sbyte A, sbyte R, sbyte G, sbyte B) {
    builder.Prep(1, 4);
    builder.PutSbyte(B);
    builder.PutSbyte(G);
    builder.PutSbyte(R);
    builder.PutSbyte(A);
    return new Offset<AUT_WH.MajorDomoProtocol.Color>(builder.Offset);
  }
};

/// 3D Vector
public struct Vector3D : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Vector3D __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float X { get { return __p.bb.GetFloat(__p.bb_pos + 0); } }
  public void MutateX(float x) { __p.bb.PutFloat(__p.bb_pos + 0, x); }
  public float Y { get { return __p.bb.GetFloat(__p.bb_pos + 4); } }
  public void MutateY(float y) { __p.bb.PutFloat(__p.bb_pos + 4, y); }
  public float Z { get { return __p.bb.GetFloat(__p.bb_pos + 8); } }
  public void MutateZ(float z) { __p.bb.PutFloat(__p.bb_pos + 8, z); }

  public static Offset<AUT_WH.MajorDomoProtocol.Vector3D> CreateVector3D(FlatBufferBuilder builder, float X, float Y, float Z) {
    builder.Prep(4, 12);
    builder.PutFloat(Z);
    builder.PutFloat(Y);
    builder.PutFloat(X);
    return new Offset<AUT_WH.MajorDomoProtocol.Vector3D>(builder.Offset);
  }
};

/// Quaternion
public struct Quaternion : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Quaternion __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float X { get { return __p.bb.GetFloat(__p.bb_pos + 0); } }
  public void MutateX(float x) { __p.bb.PutFloat(__p.bb_pos + 0, x); }
  public float Y { get { return __p.bb.GetFloat(__p.bb_pos + 4); } }
  public void MutateY(float y) { __p.bb.PutFloat(__p.bb_pos + 4, y); }
  public float Z { get { return __p.bb.GetFloat(__p.bb_pos + 8); } }
  public void MutateZ(float z) { __p.bb.PutFloat(__p.bb_pos + 8, z); }
  public float W { get { return __p.bb.GetFloat(__p.bb_pos + 12); } }
  public void MutateW(float w) { __p.bb.PutFloat(__p.bb_pos + 12, w); }

  public static Offset<AUT_WH.MajorDomoProtocol.Quaternion> CreateQuaternion(FlatBufferBuilder builder, float X, float Y, float Z, float W) {
    builder.Prep(4, 16);
    builder.PutFloat(W);
    builder.PutFloat(Z);
    builder.PutFloat(Y);
    builder.PutFloat(X);
    return new Offset<AUT_WH.MajorDomoProtocol.Quaternion>(builder.Offset);
  }
};

/// Server information
public struct ServerInformation : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ServerInformation GetRootAsServerInformation(ByteBuffer _bb) { return GetRootAsServerInformation(_bb, new ServerInformation()); }
  public static ServerInformation GetRootAsServerInformation(ByteBuffer _bb, ServerInformation obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ServerInformation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public AUT_WH.MajorDomoProtocol.Version? ServerVersion { get { int o = __p.__offset(6); return o != 0 ? (AUT_WH.MajorDomoProtocol.Version?)(new AUT_WH.MajorDomoProtocol.Version()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public AUT_WH.MajorDomoProtocol.Version? ProtocolVersion { get { int o = __p.__offset(8); return o != 0 ? (AUT_WH.MajorDomoProtocol.Version?)(new AUT_WH.MajorDomoProtocol.Version()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public ushort ServerEventPort { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public bool MutateServerEventPort(ushort serverEventPort) { int o = __p.__offset(10); if (o != 0) { __p.bb.PutUshort(o + __p.bb_pos, serverEventPort); return true; } else { return false; } }
  public ushort ClientUpdatePort { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public bool MutateClientUpdatePort(ushort clientUpdatePort) { int o = __p.__offset(12); if (o != 0) { __p.bb.PutUshort(o + __p.bb_pos, clientUpdatePort); return true; } else { return false; } }
  public ushort ServerUpdatePort { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public bool MutateServerUpdatePort(ushort serverUpdatePort) { int o = __p.__offset(14); if (o != 0) { __p.bb.PutUshort(o + __p.bb_pos, serverUpdatePort); return true; } else { return false; } }
  public ushort UpdateInterval { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public bool MutateUpdateInterval(ushort updateInterval) { int o = __p.__offset(16); if (o != 0) { __p.bb.PutUshort(o + __p.bb_pos, updateInterval); return true; } else { return false; } }
  public ushort ClientHeartbeatInterval { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public bool MutateClientHeartbeatInterval(ushort clientHeartbeatInterval) { int o = __p.__offset(18); if (o != 0) { __p.bb.PutUshort(o + __p.bb_pos, clientHeartbeatInterval); return true; } else { return false; } }
  public bool AllowsRemoteControl { get { int o = __p.__offset(20); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool MutateAllowsRemoteControl(bool allowsRemoteControl) { int o = __p.__offset(20); if (o != 0) { __p.bb.Put(o + __p.bb_pos, (byte)(allowsRemoteControl ? 1 : 0)); return true; } else { return false; } }

  public static void StartServerInformation(FlatBufferBuilder builder) { builder.StartTable(9); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddServerVersion(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.Version> serverVersionOffset) { builder.AddStruct(1, serverVersionOffset.Value, 0); }
  public static void AddProtocolVersion(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.Version> protocolVersionOffset) { builder.AddStruct(2, protocolVersionOffset.Value, 0); }
  public static void AddServerEventPort(FlatBufferBuilder builder, ushort serverEventPort) { builder.AddUshort(3, serverEventPort, 0); }
  public static void AddClientUpdatePort(FlatBufferBuilder builder, ushort clientUpdatePort) { builder.AddUshort(4, clientUpdatePort, 0); }
  public static void AddServerUpdatePort(FlatBufferBuilder builder, ushort serverUpdatePort) { builder.AddUshort(5, serverUpdatePort, 0); }
  public static void AddUpdateInterval(FlatBufferBuilder builder, ushort updateInterval) { builder.AddUshort(6, updateInterval, 0); }
  public static void AddClientHeartbeatInterval(FlatBufferBuilder builder, ushort clientHeartbeatInterval) { builder.AddUshort(7, clientHeartbeatInterval, 0); }
  public static void AddAllowsRemoteControl(FlatBufferBuilder builder, bool allowsRemoteControl) { builder.AddBool(8, allowsRemoteControl, false); }
  public static Offset<AUT_WH.MajorDomoProtocol.ServerInformation> EndServerInformation(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // name
    builder.Required(o, 6);  // serverVersion
    builder.Required(o, 8);  // protocolVersion
    return new Offset<AUT_WH.MajorDomoProtocol.ServerInformation>(o);
  }
};

/// Client information
public struct ClientInformation : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ClientInformation GetRootAsClientInformation(ByteBuffer _bb) { return GetRootAsClientInformation(_bb, new ClientInformation()); }
  public static ClientInformation GetRootAsClientInformation(ByteBuffer _bb, ClientInformation obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ClientInformation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ClientName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClientNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetClientNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetClientNameArray() { return __p.__vector_as_array<byte>(4); }
  public string UserName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUserNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetUserNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetUserNameArray() { return __p.__vector_as_array<byte>(6); }
  public uint Uid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateUid(uint uid) { int o = __p.__offset(8); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, uid); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ClientInformation> CreateClientInformation(FlatBufferBuilder builder,
      StringOffset clientNameOffset = default(StringOffset),
      StringOffset userNameOffset = default(StringOffset),
      uint uid = 0) {
    builder.StartTable(3);
    ClientInformation.AddUid(builder, uid);
    ClientInformation.AddUserName(builder, userNameOffset);
    ClientInformation.AddClientName(builder, clientNameOffset);
    return ClientInformation.EndClientInformation(builder);
  }

  public static void StartClientInformation(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddClientName(FlatBufferBuilder builder, StringOffset clientNameOffset) { builder.AddOffset(0, clientNameOffset.Value, 0); }
  public static void AddUserName(FlatBufferBuilder builder, StringOffset userNameOffset) { builder.AddOffset(1, userNameOffset.Value, 0); }
  public static void AddUid(FlatBufferBuilder builder, uint uid) { builder.AddUint(2, uid, 0); }
  public static Offset<AUT_WH.MajorDomoProtocol.ClientInformation> EndClientInformation(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // clientName
    builder.Required(o, 6);  // userName
    return new Offset<AUT_WH.MajorDomoProtocol.ClientInformation>(o);
  }
};

/// Information about an entity value
public struct EntityValueInformation : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static EntityValueInformation GetRootAsEntityValueInformation(ByteBuffer _bb) { return GetRootAsEntityValueInformation(_bb, new EntityValueInformation()); }
  public static EntityValueInformation GetRootAsEntityValueInformation(ByteBuffer _bb, EntityValueInformation obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EntityValueInformation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public AUT_WH.MajorDomoProtocol.EntityValueType Type { get { int o = __p.__offset(6); return o != 0 ? (AUT_WH.MajorDomoProtocol.EntityValueType)__p.bb.GetSbyte(o + __p.bb_pos) : AUT_WH.MajorDomoProtocol.EntityValueType.Boolean; } }
  public bool MutateType(AUT_WH.MajorDomoProtocol.EntityValueType type) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutSbyte(o + __p.bb_pos, (sbyte)type); return true; } else { return false; } }
  public sbyte Value(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetSbyte(__p.__vector(o) + j * 1) : (sbyte)0; }
  public int ValueLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<sbyte> GetValueBytes() { return __p.__vector_as_span<sbyte>(8, 1); }
#else
  public ArraySegment<byte>? GetValueBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public sbyte[] GetValueArray() { return __p.__vector_as_array<sbyte>(8); }
  public bool MutateValue(int j, sbyte value) { int o = __p.__offset(8); if (o != 0) { __p.bb.PutSbyte(__p.__vector(o) + j * 1, value); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.EntityValueInformation> CreateEntityValueInformation(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      AUT_WH.MajorDomoProtocol.EntityValueType type = AUT_WH.MajorDomoProtocol.EntityValueType.Boolean,
      VectorOffset valueOffset = default(VectorOffset)) {
    builder.StartTable(3);
    EntityValueInformation.AddValue(builder, valueOffset);
    EntityValueInformation.AddName(builder, nameOffset);
    EntityValueInformation.AddType(builder, type);
    return EntityValueInformation.EndEntityValueInformation(builder);
  }

  public static void StartEntityValueInformation(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddType(FlatBufferBuilder builder, AUT_WH.MajorDomoProtocol.EntityValueType type) { builder.AddSbyte(1, (sbyte)type, 0); }
  public static void AddValue(FlatBufferBuilder builder, VectorOffset valueOffset) { builder.AddOffset(2, valueOffset.Value, 0); }
  public static VectorOffset CreateValueVector(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddSbyte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateValueVectorBlock(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartValueVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<AUT_WH.MajorDomoProtocol.EntityValueInformation> EndEntityValueInformation(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // name
    return new Offset<AUT_WH.MajorDomoProtocol.EntityValueInformation>(o);
  }
};

/// Actual value of an entity value
public struct EntityValue : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static EntityValue GetRootAsEntityValue(ByteBuffer _bb) { return GetRootAsEntityValue(_bb, new EntityValue()); }
  public static EntityValue GetRootAsEntityValue(ByteBuffer _bb, EntityValue obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EntityValue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public sbyte Index { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetSbyte(o + __p.bb_pos) : (sbyte)0; } }
  public bool MutateIndex(sbyte index) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutSbyte(o + __p.bb_pos, index); return true; } else { return false; } }
  public AUT_WH.MajorDomoProtocol.EntityValueType Type { get { int o = __p.__offset(6); return o != 0 ? (AUT_WH.MajorDomoProtocol.EntityValueType)__p.bb.GetSbyte(o + __p.bb_pos) : AUT_WH.MajorDomoProtocol.EntityValueType.Boolean; } }
  public bool MutateType(AUT_WH.MajorDomoProtocol.EntityValueType type) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutSbyte(o + __p.bb_pos, (sbyte)type); return true; } else { return false; } }
  public sbyte Value(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetSbyte(__p.__vector(o) + j * 1) : (sbyte)0; }
  public int ValueLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<sbyte> GetValueBytes() { return __p.__vector_as_span<sbyte>(8, 1); }
#else
  public ArraySegment<byte>? GetValueBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public sbyte[] GetValueArray() { return __p.__vector_as_array<sbyte>(8); }
  public bool MutateValue(int j, sbyte value) { int o = __p.__offset(8); if (o != 0) { __p.bb.PutSbyte(__p.__vector(o) + j * 1, value); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.EntityValue> CreateEntityValue(FlatBufferBuilder builder,
      sbyte index = 0,
      AUT_WH.MajorDomoProtocol.EntityValueType type = AUT_WH.MajorDomoProtocol.EntityValueType.Boolean,
      VectorOffset valueOffset = default(VectorOffset)) {
    builder.StartTable(3);
    EntityValue.AddValue(builder, valueOffset);
    EntityValue.AddType(builder, type);
    EntityValue.AddIndex(builder, index);
    return EntityValue.EndEntityValue(builder);
  }

  public static void StartEntityValue(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddIndex(FlatBufferBuilder builder, sbyte index) { builder.AddSbyte(0, index, 0); }
  public static void AddType(FlatBufferBuilder builder, AUT_WH.MajorDomoProtocol.EntityValueType type) { builder.AddSbyte(1, (sbyte)type, 0); }
  public static void AddValue(FlatBufferBuilder builder, VectorOffset valueOffset) { builder.AddOffset(2, valueOffset.Value, 0); }
  public static VectorOffset CreateValueVector(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddSbyte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateValueVectorBlock(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartValueVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<AUT_WH.MajorDomoProtocol.EntityValue> EndEntityValue(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.EntityValue>(o);
  }
};

/// Entity information
public struct EntityInformation : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static EntityInformation GetRootAsEntityInformation(ByteBuffer _bb) { return GetRootAsEntityInformation(_bb, new EntityInformation()); }
  public static EntityInformation GetRootAsEntityInformation(ByteBuffer _bb, EntityInformation obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EntityInformation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public uint EntityUID { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateEntityUID(uint entityUID) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, entityUID); return true; } else { return false; } }
  public uint ClientUID { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateClientUID(uint clientUID) { int o = __p.__offset(8); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, clientUID); return true; } else { return false; } }
  public ushort Properties { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public bool MutateProperties(ushort properties) { int o = __p.__offset(10); if (o != 0) { __p.bb.PutUshort(o + __p.bb_pos, properties); return true; } else { return false; } }
  public AUT_WH.MajorDomoProtocol.EntityValueInformation? Values(int j) { int o = __p.__offset(12); return o != 0 ? (AUT_WH.MajorDomoProtocol.EntityValueInformation?)(new AUT_WH.MajorDomoProtocol.EntityValueInformation()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ValuesLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<AUT_WH.MajorDomoProtocol.EntityInformation> CreateEntityInformation(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      uint entityUID = 0,
      uint clientUID = 0,
      ushort properties = 0,
      VectorOffset valuesOffset = default(VectorOffset)) {
    builder.StartTable(5);
    EntityInformation.AddValues(builder, valuesOffset);
    EntityInformation.AddClientUID(builder, clientUID);
    EntityInformation.AddEntityUID(builder, entityUID);
    EntityInformation.AddName(builder, nameOffset);
    EntityInformation.AddProperties(builder, properties);
    return EntityInformation.EndEntityInformation(builder);
  }

  public static void StartEntityInformation(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddEntityUID(FlatBufferBuilder builder, uint entityUID) { builder.AddUint(1, entityUID, 0); }
  public static void AddClientUID(FlatBufferBuilder builder, uint clientUID) { builder.AddUint(2, clientUID, 0); }
  public static void AddProperties(FlatBufferBuilder builder, ushort properties) { builder.AddUshort(3, properties, 0); }
  public static void AddValues(FlatBufferBuilder builder, VectorOffset valuesOffset) { builder.AddOffset(4, valuesOffset.Value, 0); }
  public static VectorOffset CreateValuesVector(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.EntityValueInformation>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateValuesVectorBlock(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.EntityValueInformation>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.EntityInformation> EndEntityInformation(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // name
    return new Offset<AUT_WH.MajorDomoProtocol.EntityInformation>(o);
  }
};

/// Client requesting to connect
public struct ClReq_ClientConnect : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ClReq_ClientConnect GetRootAsClReq_ClientConnect(ByteBuffer _bb) { return GetRootAsClReq_ClientConnect(_bb, new ClReq_ClientConnect()); }
  public static ClReq_ClientConnect GetRootAsClReq_ClientConnect(ByteBuffer _bb, ClReq_ClientConnect obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ClReq_ClientConnect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ClientName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClientNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetClientNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetClientNameArray() { return __p.__vector_as_array<byte>(4); }
  public string UserName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUserNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetUserNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetUserNameArray() { return __p.__vector_as_array<byte>(6); }
  public AUT_WH.MajorDomoProtocol.Version? ClientVersion { get { int o = __p.__offset(8); return o != 0 ? (AUT_WH.MajorDomoProtocol.Version?)(new AUT_WH.MajorDomoProtocol.Version()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public AUT_WH.MajorDomoProtocol.Version? ClientProtocol { get { int o = __p.__offset(10); return o != 0 ? (AUT_WH.MajorDomoProtocol.Version?)(new AUT_WH.MajorDomoProtocol.Version()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartClReq_ClientConnect(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddClientName(FlatBufferBuilder builder, StringOffset clientNameOffset) { builder.AddOffset(0, clientNameOffset.Value, 0); }
  public static void AddUserName(FlatBufferBuilder builder, StringOffset userNameOffset) { builder.AddOffset(1, userNameOffset.Value, 0); }
  public static void AddClientVersion(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.Version> clientVersionOffset) { builder.AddStruct(2, clientVersionOffset.Value, 0); }
  public static void AddClientProtocol(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.Version> clientProtocolOffset) { builder.AddStruct(3, clientProtocolOffset.Value, 0); }
  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_ClientConnect> EndClReq_ClientConnect(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // clientName
    builder.Required(o, 6);  // userName
    builder.Required(o, 8);  // clientVersion
    builder.Required(o, 10);  // clientProtocol
    return new Offset<AUT_WH.MajorDomoProtocol.ClReq_ClientConnect>(o);
  }
};

/// Server reply to a connecting client
public struct SvRep_ClientConnect : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SvRep_ClientConnect GetRootAsSvRep_ClientConnect(ByteBuffer _bb) { return GetRootAsSvRep_ClientConnect(_bb, new SvRep_ClientConnect()); }
  public static SvRep_ClientConnect GetRootAsSvRep_ClientConnect(ByteBuffer _bb, SvRep_ClientConnect obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SvRep_ClientConnect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ClientUID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateClientUID(uint clientUID) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, clientUID); return true; } else { return false; } }
  public AUT_WH.MajorDomoProtocol.ServerInformation? ServerInformation { get { int o = __p.__offset(6); return o != 0 ? (AUT_WH.MajorDomoProtocol.ServerInformation?)(new AUT_WH.MajorDomoProtocol.ServerInformation()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_ClientConnect> CreateSvRep_ClientConnect(FlatBufferBuilder builder,
      uint clientUID = 0,
      Offset<AUT_WH.MajorDomoProtocol.ServerInformation> serverInformationOffset = default(Offset<AUT_WH.MajorDomoProtocol.ServerInformation>)) {
    builder.StartTable(2);
    SvRep_ClientConnect.AddServerInformation(builder, serverInformationOffset);
    SvRep_ClientConnect.AddClientUID(builder, clientUID);
    return SvRep_ClientConnect.EndSvRep_ClientConnect(builder);
  }

  public static void StartSvRep_ClientConnect(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddClientUID(FlatBufferBuilder builder, uint clientUID) { builder.AddUint(0, clientUID, 0); }
  public static void AddServerInformation(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.ServerInformation> serverInformationOffset) { builder.AddOffset(1, serverInformationOffset.Value, 0); }
  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_ClientConnect> EndSvRep_ClientConnect(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.SvRep_ClientConnect>(o);
  }
};

/// Client requesting to disconnect
public struct ClReq_ClientDisconnect : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ClReq_ClientDisconnect GetRootAsClReq_ClientDisconnect(ByteBuffer _bb) { return GetRootAsClReq_ClientDisconnect(_bb, new ClReq_ClientDisconnect()); }
  public static ClReq_ClientDisconnect GetRootAsClReq_ClientDisconnect(ByteBuffer _bb, ClReq_ClientDisconnect obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ClReq_ClientDisconnect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ClientUID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateClientUID(uint clientUID) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, clientUID); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_ClientDisconnect> CreateClReq_ClientDisconnect(FlatBufferBuilder builder,
      uint clientUID = 0) {
    builder.StartTable(1);
    ClReq_ClientDisconnect.AddClientUID(builder, clientUID);
    return ClReq_ClientDisconnect.EndClReq_ClientDisconnect(builder);
  }

  public static void StartClReq_ClientDisconnect(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddClientUID(FlatBufferBuilder builder, uint clientUID) { builder.AddUint(0, clientUID, 0); }
  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_ClientDisconnect> EndClReq_ClientDisconnect(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.ClReq_ClientDisconnect>(o);
  }
};

/// Server acknowledging a disconnecting client
public struct SvRep_ClientDisconnect : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SvRep_ClientDisconnect GetRootAsSvRep_ClientDisconnect(ByteBuffer _bb) { return GetRootAsSvRep_ClientDisconnect(_bb, new SvRep_ClientDisconnect()); }
  public static SvRep_ClientDisconnect GetRootAsSvRep_ClientDisconnect(ByteBuffer _bb, SvRep_ClientDisconnect obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SvRep_ClientDisconnect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartSvRep_ClientDisconnect(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_ClientDisconnect> EndSvRep_ClientDisconnect(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.SvRep_ClientDisconnect>(o);
  }
};

/// Client requesting list of other clients
public struct ClReq_GetClientList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ClReq_GetClientList GetRootAsClReq_GetClientList(ByteBuffer _bb) { return GetRootAsClReq_GetClientList(_bb, new ClReq_GetClientList()); }
  public static ClReq_GetClientList GetRootAsClReq_GetClientList(ByteBuffer _bb, ClReq_GetClientList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ClReq_GetClientList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ClientUIDs(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int ClientUIDsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<uint> GetClientUIDsBytes() { return __p.__vector_as_span<uint>(4, 4); }
#else
  public ArraySegment<byte>? GetClientUIDsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public uint[] GetClientUIDsArray() { return __p.__vector_as_array<uint>(4); }
  public bool MutateClientUIDs(int j, uint clientUIDs) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(__p.__vector(o) + j * 4, clientUIDs); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_GetClientList> CreateClReq_GetClientList(FlatBufferBuilder builder,
      VectorOffset clientUIDsOffset = default(VectorOffset)) {
    builder.StartTable(1);
    ClReq_GetClientList.AddClientUIDs(builder, clientUIDsOffset);
    return ClReq_GetClientList.EndClReq_GetClientList(builder);
  }

  public static void StartClReq_GetClientList(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddClientUIDs(FlatBufferBuilder builder, VectorOffset clientUIDsOffset) { builder.AddOffset(0, clientUIDsOffset.Value, 0); }
  public static VectorOffset CreateClientUIDsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateClientUIDsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartClientUIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_GetClientList> EndClReq_GetClientList(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.ClReq_GetClientList>(o);
  }
};

/// Server responding to a client requesting other clients information
public struct SvRep_GetClientList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SvRep_GetClientList GetRootAsSvRep_GetClientList(ByteBuffer _bb) { return GetRootAsSvRep_GetClientList(_bb, new SvRep_GetClientList()); }
  public static SvRep_GetClientList GetRootAsSvRep_GetClientList(ByteBuffer _bb, SvRep_GetClientList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SvRep_GetClientList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AUT_WH.MajorDomoProtocol.ClientInformation? Clients(int j) { int o = __p.__offset(4); return o != 0 ? (AUT_WH.MajorDomoProtocol.ClientInformation?)(new AUT_WH.MajorDomoProtocol.ClientInformation()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ClientsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_GetClientList> CreateSvRep_GetClientList(FlatBufferBuilder builder,
      VectorOffset clientsOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SvRep_GetClientList.AddClients(builder, clientsOffset);
    return SvRep_GetClientList.EndSvRep_GetClientList(builder);
  }

  public static void StartSvRep_GetClientList(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddClients(FlatBufferBuilder builder, VectorOffset clientsOffset) { builder.AddOffset(0, clientsOffset.Value, 0); }
  public static VectorOffset CreateClientsVector(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.ClientInformation>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateClientsVectorBlock(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.ClientInformation>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartClientsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_GetClientList> EndSvRep_GetClientList(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.SvRep_GetClientList>(o);
  }
};

/// Client requesting list of entities
public struct ClReq_GetEntityList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ClReq_GetEntityList GetRootAsClReq_GetEntityList(ByteBuffer _bb) { return GetRootAsClReq_GetEntityList(_bb, new ClReq_GetEntityList()); }
  public static ClReq_GetEntityList GetRootAsClReq_GetEntityList(ByteBuffer _bb, ClReq_GetEntityList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ClReq_GetEntityList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint EntityUIDs(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int EntityUIDsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<uint> GetEntityUIDsBytes() { return __p.__vector_as_span<uint>(4, 4); }
#else
  public ArraySegment<byte>? GetEntityUIDsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public uint[] GetEntityUIDsArray() { return __p.__vector_as_array<uint>(4); }
  public bool MutateEntityUIDs(int j, uint entityUIDs) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(__p.__vector(o) + j * 4, entityUIDs); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_GetEntityList> CreateClReq_GetEntityList(FlatBufferBuilder builder,
      VectorOffset entityUIDsOffset = default(VectorOffset)) {
    builder.StartTable(1);
    ClReq_GetEntityList.AddEntityUIDs(builder, entityUIDsOffset);
    return ClReq_GetEntityList.EndClReq_GetEntityList(builder);
  }

  public static void StartClReq_GetEntityList(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddEntityUIDs(FlatBufferBuilder builder, VectorOffset entityUIDsOffset) { builder.AddOffset(0, entityUIDsOffset.Value, 0); }
  public static VectorOffset CreateEntityUIDsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateEntityUIDsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntityUIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_GetEntityList> EndClReq_GetEntityList(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.ClReq_GetEntityList>(o);
  }
};

/// Server responding to a client requesting entity information
public struct SvRep_GetEntityList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SvRep_GetEntityList GetRootAsSvRep_GetEntityList(ByteBuffer _bb) { return GetRootAsSvRep_GetEntityList(_bb, new SvRep_GetEntityList()); }
  public static SvRep_GetEntityList GetRootAsSvRep_GetEntityList(ByteBuffer _bb, SvRep_GetEntityList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SvRep_GetEntityList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AUT_WH.MajorDomoProtocol.EntityInformation? Entities(int j) { int o = __p.__offset(4); return o != 0 ? (AUT_WH.MajorDomoProtocol.EntityInformation?)(new AUT_WH.MajorDomoProtocol.EntityInformation()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EntitiesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_GetEntityList> CreateSvRep_GetEntityList(FlatBufferBuilder builder,
      VectorOffset entitiesOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SvRep_GetEntityList.AddEntities(builder, entitiesOffset);
    return SvRep_GetEntityList.EndSvRep_GetEntityList(builder);
  }

  public static void StartSvRep_GetEntityList(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddEntities(FlatBufferBuilder builder, VectorOffset entitiesOffset) { builder.AddOffset(0, entitiesOffset.Value, 0); }
  public static VectorOffset CreateEntitiesVector(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.EntityInformation>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEntitiesVectorBlock(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.EntityInformation>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntitiesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_GetEntityList> EndSvRep_GetEntityList(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.SvRep_GetEntityList>(o);
  }
};

/// Client publishing/registering entities
public struct ClReq_PublishEntities : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ClReq_PublishEntities GetRootAsClReq_PublishEntities(ByteBuffer _bb) { return GetRootAsClReq_PublishEntities(_bb, new ClReq_PublishEntities()); }
  public static ClReq_PublishEntities GetRootAsClReq_PublishEntities(ByteBuffer _bb, ClReq_PublishEntities obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ClReq_PublishEntities __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ClientUID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateClientUID(uint clientUID) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, clientUID); return true; } else { return false; } }
  public AUT_WH.MajorDomoProtocol.EntityInformation? Entities(int j) { int o = __p.__offset(6); return o != 0 ? (AUT_WH.MajorDomoProtocol.EntityInformation?)(new AUT_WH.MajorDomoProtocol.EntityInformation()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EntitiesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_PublishEntities> CreateClReq_PublishEntities(FlatBufferBuilder builder,
      uint clientUID = 0,
      VectorOffset entitiesOffset = default(VectorOffset)) {
    builder.StartTable(2);
    ClReq_PublishEntities.AddEntities(builder, entitiesOffset);
    ClReq_PublishEntities.AddClientUID(builder, clientUID);
    return ClReq_PublishEntities.EndClReq_PublishEntities(builder);
  }

  public static void StartClReq_PublishEntities(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddClientUID(FlatBufferBuilder builder, uint clientUID) { builder.AddUint(0, clientUID, 0); }
  public static void AddEntities(FlatBufferBuilder builder, VectorOffset entitiesOffset) { builder.AddOffset(1, entitiesOffset.Value, 0); }
  public static VectorOffset CreateEntitiesVector(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.EntityInformation>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEntitiesVectorBlock(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.EntityInformation>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntitiesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_PublishEntities> EndClReq_PublishEntities(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.ClReq_PublishEntities>(o);
  }
};

/// Server responding to a client publishing entities
public struct SvRep_PublishEntities : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SvRep_PublishEntities GetRootAsSvRep_PublishEntities(ByteBuffer _bb) { return GetRootAsSvRep_PublishEntities(_bb, new SvRep_PublishEntities()); }
  public static SvRep_PublishEntities GetRootAsSvRep_PublishEntities(ByteBuffer _bb, SvRep_PublishEntities obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SvRep_PublishEntities __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint EntityUIDs(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int EntityUIDsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<uint> GetEntityUIDsBytes() { return __p.__vector_as_span<uint>(4, 4); }
#else
  public ArraySegment<byte>? GetEntityUIDsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public uint[] GetEntityUIDsArray() { return __p.__vector_as_array<uint>(4); }
  public bool MutateEntityUIDs(int j, uint entityUIDs) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(__p.__vector(o) + j * 4, entityUIDs); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_PublishEntities> CreateSvRep_PublishEntities(FlatBufferBuilder builder,
      VectorOffset entityUIDsOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SvRep_PublishEntities.AddEntityUIDs(builder, entityUIDsOffset);
    return SvRep_PublishEntities.EndSvRep_PublishEntities(builder);
  }

  public static void StartSvRep_PublishEntities(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddEntityUIDs(FlatBufferBuilder builder, VectorOffset entityUIDsOffset) { builder.AddOffset(0, entityUIDsOffset.Value, 0); }
  public static VectorOffset CreateEntityUIDsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateEntityUIDsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntityUIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_PublishEntities> EndSvRep_PublishEntities(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.SvRep_PublishEntities>(o);
  }
};

/// Client revoking/unregistering entities
public struct ClReq_RevokeEntities : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ClReq_RevokeEntities GetRootAsClReq_RevokeEntities(ByteBuffer _bb) { return GetRootAsClReq_RevokeEntities(_bb, new ClReq_RevokeEntities()); }
  public static ClReq_RevokeEntities GetRootAsClReq_RevokeEntities(ByteBuffer _bb, ClReq_RevokeEntities obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ClReq_RevokeEntities __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ClientUID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateClientUID(uint clientUID) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, clientUID); return true; } else { return false; } }
  public uint EntityUIDs(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int EntityUIDsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<uint> GetEntityUIDsBytes() { return __p.__vector_as_span<uint>(6, 4); }
#else
  public ArraySegment<byte>? GetEntityUIDsBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public uint[] GetEntityUIDsArray() { return __p.__vector_as_array<uint>(6); }
  public bool MutateEntityUIDs(int j, uint entityUIDs) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutUint(__p.__vector(o) + j * 4, entityUIDs); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_RevokeEntities> CreateClReq_RevokeEntities(FlatBufferBuilder builder,
      uint clientUID = 0,
      VectorOffset entityUIDsOffset = default(VectorOffset)) {
    builder.StartTable(2);
    ClReq_RevokeEntities.AddEntityUIDs(builder, entityUIDsOffset);
    ClReq_RevokeEntities.AddClientUID(builder, clientUID);
    return ClReq_RevokeEntities.EndClReq_RevokeEntities(builder);
  }

  public static void StartClReq_RevokeEntities(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddClientUID(FlatBufferBuilder builder, uint clientUID) { builder.AddUint(0, clientUID, 0); }
  public static void AddEntityUIDs(FlatBufferBuilder builder, VectorOffset entityUIDsOffset) { builder.AddOffset(1, entityUIDsOffset.Value, 0); }
  public static VectorOffset CreateEntityUIDsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateEntityUIDsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntityUIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_RevokeEntities> EndClReq_RevokeEntities(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.ClReq_RevokeEntities>(o);
  }
};

/// Server responding to a client revoking entities
public struct SvRep_RevokeEntities : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SvRep_RevokeEntities GetRootAsSvRep_RevokeEntities(ByteBuffer _bb) { return GetRootAsSvRep_RevokeEntities(_bb, new SvRep_RevokeEntities()); }
  public static SvRep_RevokeEntities GetRootAsSvRep_RevokeEntities(ByteBuffer _bb, SvRep_RevokeEntities obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SvRep_RevokeEntities __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint EntityUIDs(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int EntityUIDsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<uint> GetEntityUIDsBytes() { return __p.__vector_as_span<uint>(4, 4); }
#else
  public ArraySegment<byte>? GetEntityUIDsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public uint[] GetEntityUIDsArray() { return __p.__vector_as_array<uint>(4); }
  public bool MutateEntityUIDs(int j, uint entityUIDs) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(__p.__vector(o) + j * 4, entityUIDs); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_RevokeEntities> CreateSvRep_RevokeEntities(FlatBufferBuilder builder,
      VectorOffset entityUIDsOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SvRep_RevokeEntities.AddEntityUIDs(builder, entityUIDsOffset);
    return SvRep_RevokeEntities.EndSvRep_RevokeEntities(builder);
  }

  public static void StartSvRep_RevokeEntities(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddEntityUIDs(FlatBufferBuilder builder, VectorOffset entityUIDsOffset) { builder.AddOffset(0, entityUIDsOffset.Value, 0); }
  public static VectorOffset CreateEntityUIDsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateEntityUIDsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntityUIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_RevokeEntities> EndSvRep_RevokeEntities(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.SvRep_RevokeEntities>(o);
  }
};

/// Client requesting control of entities
public struct ClReq_RequestEntityControl : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ClReq_RequestEntityControl GetRootAsClReq_RequestEntityControl(ByteBuffer _bb) { return GetRootAsClReq_RequestEntityControl(_bb, new ClReq_RequestEntityControl()); }
  public static ClReq_RequestEntityControl GetRootAsClReq_RequestEntityControl(ByteBuffer _bb, ClReq_RequestEntityControl obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ClReq_RequestEntityControl __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ClientUID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateClientUID(uint clientUID) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, clientUID); return true; } else { return false; } }
  public uint EntityUIDs(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int EntityUIDsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<uint> GetEntityUIDsBytes() { return __p.__vector_as_span<uint>(6, 4); }
#else
  public ArraySegment<byte>? GetEntityUIDsBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public uint[] GetEntityUIDsArray() { return __p.__vector_as_array<uint>(6); }
  public bool MutateEntityUIDs(int j, uint entityUIDs) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutUint(__p.__vector(o) + j * 4, entityUIDs); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_RequestEntityControl> CreateClReq_RequestEntityControl(FlatBufferBuilder builder,
      uint clientUID = 0,
      VectorOffset entityUIDsOffset = default(VectorOffset)) {
    builder.StartTable(2);
    ClReq_RequestEntityControl.AddEntityUIDs(builder, entityUIDsOffset);
    ClReq_RequestEntityControl.AddClientUID(builder, clientUID);
    return ClReq_RequestEntityControl.EndClReq_RequestEntityControl(builder);
  }

  public static void StartClReq_RequestEntityControl(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddClientUID(FlatBufferBuilder builder, uint clientUID) { builder.AddUint(0, clientUID, 0); }
  public static void AddEntityUIDs(FlatBufferBuilder builder, VectorOffset entityUIDsOffset) { builder.AddOffset(1, entityUIDsOffset.Value, 0); }
  public static VectorOffset CreateEntityUIDsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateEntityUIDsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntityUIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_RequestEntityControl> EndClReq_RequestEntityControl(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.ClReq_RequestEntityControl>(o);
  }
};

/// Server responding to a client requesting entity control
public struct SvRep_RequestEntityControl : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SvRep_RequestEntityControl GetRootAsSvRep_RequestEntityControl(ByteBuffer _bb) { return GetRootAsSvRep_RequestEntityControl(_bb, new SvRep_RequestEntityControl()); }
  public static SvRep_RequestEntityControl GetRootAsSvRep_RequestEntityControl(ByteBuffer _bb, SvRep_RequestEntityControl obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SvRep_RequestEntityControl __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint EntityUIDs(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int EntityUIDsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<uint> GetEntityUIDsBytes() { return __p.__vector_as_span<uint>(4, 4); }
#else
  public ArraySegment<byte>? GetEntityUIDsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public uint[] GetEntityUIDsArray() { return __p.__vector_as_array<uint>(4); }
  public bool MutateEntityUIDs(int j, uint entityUIDs) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(__p.__vector(o) + j * 4, entityUIDs); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_RequestEntityControl> CreateSvRep_RequestEntityControl(FlatBufferBuilder builder,
      VectorOffset entityUIDsOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SvRep_RequestEntityControl.AddEntityUIDs(builder, entityUIDsOffset);
    return SvRep_RequestEntityControl.EndSvRep_RequestEntityControl(builder);
  }

  public static void StartSvRep_RequestEntityControl(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddEntityUIDs(FlatBufferBuilder builder, VectorOffset entityUIDsOffset) { builder.AddOffset(0, entityUIDsOffset.Value, 0); }
  public static VectorOffset CreateEntityUIDsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateEntityUIDsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntityUIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_RequestEntityControl> EndSvRep_RequestEntityControl(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.SvRep_RequestEntityControl>(o);
  }
};

/// Client releasing control of entities
public struct ClReq_ReleaseEntityControl : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ClReq_ReleaseEntityControl GetRootAsClReq_ReleaseEntityControl(ByteBuffer _bb) { return GetRootAsClReq_ReleaseEntityControl(_bb, new ClReq_ReleaseEntityControl()); }
  public static ClReq_ReleaseEntityControl GetRootAsClReq_ReleaseEntityControl(ByteBuffer _bb, ClReq_ReleaseEntityControl obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ClReq_ReleaseEntityControl __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ClientUID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateClientUID(uint clientUID) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, clientUID); return true; } else { return false; } }
  public uint EntityUIDs(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int EntityUIDsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<uint> GetEntityUIDsBytes() { return __p.__vector_as_span<uint>(6, 4); }
#else
  public ArraySegment<byte>? GetEntityUIDsBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public uint[] GetEntityUIDsArray() { return __p.__vector_as_array<uint>(6); }
  public bool MutateEntityUIDs(int j, uint entityUIDs) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutUint(__p.__vector(o) + j * 4, entityUIDs); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_ReleaseEntityControl> CreateClReq_ReleaseEntityControl(FlatBufferBuilder builder,
      uint clientUID = 0,
      VectorOffset entityUIDsOffset = default(VectorOffset)) {
    builder.StartTable(2);
    ClReq_ReleaseEntityControl.AddEntityUIDs(builder, entityUIDsOffset);
    ClReq_ReleaseEntityControl.AddClientUID(builder, clientUID);
    return ClReq_ReleaseEntityControl.EndClReq_ReleaseEntityControl(builder);
  }

  public static void StartClReq_ReleaseEntityControl(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddClientUID(FlatBufferBuilder builder, uint clientUID) { builder.AddUint(0, clientUID, 0); }
  public static void AddEntityUIDs(FlatBufferBuilder builder, VectorOffset entityUIDsOffset) { builder.AddOffset(1, entityUIDsOffset.Value, 0); }
  public static VectorOffset CreateEntityUIDsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateEntityUIDsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntityUIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_ReleaseEntityControl> EndClReq_ReleaseEntityControl(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.ClReq_ReleaseEntityControl>(o);
  }
};

/// Server responding to a client releasing entity control
public struct SvRep_ReleaseEntityControl : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SvRep_ReleaseEntityControl GetRootAsSvRep_ReleaseEntityControl(ByteBuffer _bb) { return GetRootAsSvRep_ReleaseEntityControl(_bb, new SvRep_ReleaseEntityControl()); }
  public static SvRep_ReleaseEntityControl GetRootAsSvRep_ReleaseEntityControl(ByteBuffer _bb, SvRep_ReleaseEntityControl obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SvRep_ReleaseEntityControl __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint EntityUIDs(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int EntityUIDsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<uint> GetEntityUIDsBytes() { return __p.__vector_as_span<uint>(4, 4); }
#else
  public ArraySegment<byte>? GetEntityUIDsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public uint[] GetEntityUIDsArray() { return __p.__vector_as_array<uint>(4); }
  public bool MutateEntityUIDs(int j, uint entityUIDs) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(__p.__vector(o) + j * 4, entityUIDs); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_ReleaseEntityControl> CreateSvRep_ReleaseEntityControl(FlatBufferBuilder builder,
      VectorOffset entityUIDsOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SvRep_ReleaseEntityControl.AddEntityUIDs(builder, entityUIDsOffset);
    return SvRep_ReleaseEntityControl.EndSvRep_ReleaseEntityControl(builder);
  }

  public static void StartSvRep_ReleaseEntityControl(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddEntityUIDs(FlatBufferBuilder builder, VectorOffset entityUIDsOffset) { builder.AddOffset(0, entityUIDsOffset.Value, 0); }
  public static VectorOffset CreateEntityUIDsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateEntityUIDsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntityUIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_ReleaseEntityControl> EndSvRep_ReleaseEntityControl(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.SvRep_ReleaseEntityControl>(o);
  }
};

/// Client sending a broadcast
public struct ClReq_ClientBroadcast : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ClReq_ClientBroadcast GetRootAsClReq_ClientBroadcast(ByteBuffer _bb) { return GetRootAsClReq_ClientBroadcast(_bb, new ClReq_ClientBroadcast()); }
  public static ClReq_ClientBroadcast GetRootAsClReq_ClientBroadcast(ByteBuffer _bb, ClReq_ClientBroadcast obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ClReq_ClientBroadcast __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ClientUID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateClientUID(uint clientUID) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, clientUID); return true; } else { return false; } }
  public uint Identifier { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateIdentifier(uint identifier) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, identifier); return true; } else { return false; } }
  public sbyte Data(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetSbyte(__p.__vector(o) + j * 1) : (sbyte)0; }
  public int DataLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<sbyte> GetDataBytes() { return __p.__vector_as_span<sbyte>(8, 1); }
#else
  public ArraySegment<byte>? GetDataBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public sbyte[] GetDataArray() { return __p.__vector_as_array<sbyte>(8); }
  public bool MutateData(int j, sbyte data) { int o = __p.__offset(8); if (o != 0) { __p.bb.PutSbyte(__p.__vector(o) + j * 1, data); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_ClientBroadcast> CreateClReq_ClientBroadcast(FlatBufferBuilder builder,
      uint clientUID = 0,
      uint identifier = 0,
      VectorOffset dataOffset = default(VectorOffset)) {
    builder.StartTable(3);
    ClReq_ClientBroadcast.AddData(builder, dataOffset);
    ClReq_ClientBroadcast.AddIdentifier(builder, identifier);
    ClReq_ClientBroadcast.AddClientUID(builder, clientUID);
    return ClReq_ClientBroadcast.EndClReq_ClientBroadcast(builder);
  }

  public static void StartClReq_ClientBroadcast(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddClientUID(FlatBufferBuilder builder, uint clientUID) { builder.AddUint(0, clientUID, 0); }
  public static void AddIdentifier(FlatBufferBuilder builder, uint identifier) { builder.AddUint(1, identifier, 0); }
  public static void AddData(FlatBufferBuilder builder, VectorOffset dataOffset) { builder.AddOffset(2, dataOffset.Value, 0); }
  public static VectorOffset CreateDataVector(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddSbyte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDataVectorBlock(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartDataVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_ClientBroadcast> EndClReq_ClientBroadcast(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.ClReq_ClientBroadcast>(o);
  }
};

/// Server responding to a client broadcast
public struct SvRep_ClientBroadcast : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SvRep_ClientBroadcast GetRootAsSvRep_ClientBroadcast(ByteBuffer _bb) { return GetRootAsSvRep_ClientBroadcast(_bb, new SvRep_ClientBroadcast()); }
  public static SvRep_ClientBroadcast GetRootAsSvRep_ClientBroadcast(ByteBuffer _bb, SvRep_ClientBroadcast obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SvRep_ClientBroadcast __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartSvRep_ClientBroadcast(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_ClientBroadcast> EndSvRep_ClientBroadcast(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.SvRep_ClientBroadcast>(o);
  }
};

public struct RemoteControlCommand_StopServer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static RemoteControlCommand_StopServer GetRootAsRemoteControlCommand_StopServer(ByteBuffer _bb) { return GetRootAsRemoteControlCommand_StopServer(_bb, new RemoteControlCommand_StopServer()); }
  public static RemoteControlCommand_StopServer GetRootAsRemoteControlCommand_StopServer(ByteBuffer _bb, RemoteControlCommand_StopServer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RemoteControlCommand_StopServer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool RestartServer { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool MutateRestartServer(bool restartServer) { int o = __p.__offset(4); if (o != 0) { __p.bb.Put(o + __p.bb_pos, (byte)(restartServer ? 1 : 0)); return true; } else { return false; } }
  public bool PurgePersistent { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool MutatePurgePersistent(bool purgePersistent) { int o = __p.__offset(6); if (o != 0) { __p.bb.Put(o + __p.bb_pos, (byte)(purgePersistent ? 1 : 0)); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.RemoteControlCommand_StopServer> CreateRemoteControlCommand_StopServer(FlatBufferBuilder builder,
      bool restartServer = false,
      bool purgePersistent = false) {
    builder.StartTable(2);
    RemoteControlCommand_StopServer.AddPurgePersistent(builder, purgePersistent);
    RemoteControlCommand_StopServer.AddRestartServer(builder, restartServer);
    return RemoteControlCommand_StopServer.EndRemoteControlCommand_StopServer(builder);
  }

  public static void StartRemoteControlCommand_StopServer(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddRestartServer(FlatBufferBuilder builder, bool restartServer) { builder.AddBool(0, restartServer, false); }
  public static void AddPurgePersistent(FlatBufferBuilder builder, bool purgePersistent) { builder.AddBool(1, purgePersistent, false); }
  public static Offset<AUT_WH.MajorDomoProtocol.RemoteControlCommand_StopServer> EndRemoteControlCommand_StopServer(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.RemoteControlCommand_StopServer>(o);
  }
};

/// Client sending a remote control command
public struct ClReq_RemoteControlCommand : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ClReq_RemoteControlCommand GetRootAsClReq_RemoteControlCommand(ByteBuffer _bb) { return GetRootAsClReq_RemoteControlCommand(_bb, new ClReq_RemoteControlCommand()); }
  public static ClReq_RemoteControlCommand GetRootAsClReq_RemoteControlCommand(ByteBuffer _bb, ClReq_RemoteControlCommand obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ClReq_RemoteControlCommand __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ClientUID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateClientUID(uint clientUID) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, clientUID); return true; } else { return false; } }
  public AUT_WH.MajorDomoProtocol.URemoteControlCommand CommandType { get { int o = __p.__offset(6); return o != 0 ? (AUT_WH.MajorDomoProtocol.URemoteControlCommand)__p.bb.Get(o + __p.bb_pos) : AUT_WH.MajorDomoProtocol.URemoteControlCommand.NONE; } }
  public TTable? Command<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }

  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_RemoteControlCommand> CreateClReq_RemoteControlCommand(FlatBufferBuilder builder,
      uint clientUID = 0,
      AUT_WH.MajorDomoProtocol.URemoteControlCommand command_type = AUT_WH.MajorDomoProtocol.URemoteControlCommand.NONE,
      int commandOffset = 0) {
    builder.StartTable(3);
    ClReq_RemoteControlCommand.AddCommand(builder, commandOffset);
    ClReq_RemoteControlCommand.AddClientUID(builder, clientUID);
    ClReq_RemoteControlCommand.AddCommandType(builder, command_type);
    return ClReq_RemoteControlCommand.EndClReq_RemoteControlCommand(builder);
  }

  public static void StartClReq_RemoteControlCommand(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddClientUID(FlatBufferBuilder builder, uint clientUID) { builder.AddUint(0, clientUID, 0); }
  public static void AddCommandType(FlatBufferBuilder builder, AUT_WH.MajorDomoProtocol.URemoteControlCommand commandType) { builder.AddByte(1, (byte)commandType, 0); }
  public static void AddCommand(FlatBufferBuilder builder, int commandOffset) { builder.AddOffset(2, commandOffset, 0); }
  public static Offset<AUT_WH.MajorDomoProtocol.ClReq_RemoteControlCommand> EndClReq_RemoteControlCommand(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.ClReq_RemoteControlCommand>(o);
  }
};

/// Server responding to a client remote control request
public struct SvRep_RemoteControlCommand : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SvRep_RemoteControlCommand GetRootAsSvRep_RemoteControlCommand(ByteBuffer _bb) { return GetRootAsSvRep_RemoteControlCommand(_bb, new SvRep_RemoteControlCommand()); }
  public static SvRep_RemoteControlCommand GetRootAsSvRep_RemoteControlCommand(ByteBuffer _bb, SvRep_RemoteControlCommand obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SvRep_RemoteControlCommand __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartSvRep_RemoteControlCommand(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_RemoteControlCommand> EndSvRep_RemoteControlCommand(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.SvRep_RemoteControlCommand>(o);
  }
};

/// Server reply for errors
public struct SvRep_Error : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SvRep_Error GetRootAsSvRep_Error(ByteBuffer _bb) { return GetRootAsSvRep_Error(_bb, new SvRep_Error()); }
  public static SvRep_Error GetRootAsSvRep_Error(ByteBuffer _bb, SvRep_Error obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SvRep_Error __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Message { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_Error> CreateSvRep_Error(FlatBufferBuilder builder,
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartTable(1);
    SvRep_Error.AddMessage(builder, messageOffset);
    return SvRep_Error.EndSvRep_Error(builder);
  }

  public static void StartSvRep_Error(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(0, messageOffset.Value, 0); }
  public static Offset<AUT_WH.MajorDomoProtocol.SvRep_Error> EndSvRep_Error(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // message
    return new Offset<AUT_WH.MajorDomoProtocol.SvRep_Error>(o);
  }
};

/// Actual base client request
public struct ClientRequest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ClientRequest GetRootAsClientRequest(ByteBuffer _bb) { return GetRootAsClientRequest(_bb, new ClientRequest()); }
  public static ClientRequest GetRootAsClientRequest(ByteBuffer _bb, ClientRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ClientRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong Timestamp { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool MutateTimestamp(ulong timestamp) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUlong(o + __p.bb_pos, timestamp); return true; } else { return false; } }
  public AUT_WH.MajorDomoProtocol.UClientRequest ReqType { get { int o = __p.__offset(6); return o != 0 ? (AUT_WH.MajorDomoProtocol.UClientRequest)__p.bb.Get(o + __p.bb_pos) : AUT_WH.MajorDomoProtocol.UClientRequest.NONE; } }
  public TTable? Req<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }

  public static Offset<AUT_WH.MajorDomoProtocol.ClientRequest> CreateClientRequest(FlatBufferBuilder builder,
      ulong timestamp = 0,
      AUT_WH.MajorDomoProtocol.UClientRequest req_type = AUT_WH.MajorDomoProtocol.UClientRequest.NONE,
      int reqOffset = 0) {
    builder.StartTable(3);
    ClientRequest.AddTimestamp(builder, timestamp);
    ClientRequest.AddReq(builder, reqOffset);
    ClientRequest.AddReqType(builder, req_type);
    return ClientRequest.EndClientRequest(builder);
  }

  public static void StartClientRequest(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddTimestamp(FlatBufferBuilder builder, ulong timestamp) { builder.AddUlong(0, timestamp, 0); }
  public static void AddReqType(FlatBufferBuilder builder, AUT_WH.MajorDomoProtocol.UClientRequest reqType) { builder.AddByte(1, (byte)reqType, 0); }
  public static void AddReq(FlatBufferBuilder builder, int reqOffset) { builder.AddOffset(2, reqOffset, 0); }
  public static Offset<AUT_WH.MajorDomoProtocol.ClientRequest> EndClientRequest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 8);  // req
    return new Offset<AUT_WH.MajorDomoProtocol.ClientRequest>(o);
  }
};

/// Actual base server reply to client request
public struct ServerReply : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ServerReply GetRootAsServerReply(ByteBuffer _bb) { return GetRootAsServerReply(_bb, new ServerReply()); }
  public static ServerReply GetRootAsServerReply(ByteBuffer _bb, ServerReply obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ServerReply __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong Timestamp { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool MutateTimestamp(ulong timestamp) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUlong(o + __p.bb_pos, timestamp); return true; } else { return false; } }
  public AUT_WH.MajorDomoProtocol.UServerReply RepType { get { int o = __p.__offset(6); return o != 0 ? (AUT_WH.MajorDomoProtocol.UServerReply)__p.bb.Get(o + __p.bb_pos) : AUT_WH.MajorDomoProtocol.UServerReply.NONE; } }
  public TTable? Rep<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }

  public static Offset<AUT_WH.MajorDomoProtocol.ServerReply> CreateServerReply(FlatBufferBuilder builder,
      ulong timestamp = 0,
      AUT_WH.MajorDomoProtocol.UServerReply rep_type = AUT_WH.MajorDomoProtocol.UServerReply.NONE,
      int repOffset = 0) {
    builder.StartTable(3);
    ServerReply.AddTimestamp(builder, timestamp);
    ServerReply.AddRep(builder, repOffset);
    ServerReply.AddRepType(builder, rep_type);
    return ServerReply.EndServerReply(builder);
  }

  public static void StartServerReply(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddTimestamp(FlatBufferBuilder builder, ulong timestamp) { builder.AddUlong(0, timestamp, 0); }
  public static void AddRepType(FlatBufferBuilder builder, AUT_WH.MajorDomoProtocol.UServerReply repType) { builder.AddByte(1, (byte)repType, 0); }
  public static void AddRep(FlatBufferBuilder builder, int repOffset) { builder.AddOffset(2, repOffset, 0); }
  public static Offset<AUT_WH.MajorDomoProtocol.ServerReply> EndServerReply(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 8);  // rep
    return new Offset<AUT_WH.MajorDomoProtocol.ServerReply>(o);
  }
};

/// Event for a new client that has connected
public struct ServerEvent_ClientConnected : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ServerEvent_ClientConnected GetRootAsServerEvent_ClientConnected(ByteBuffer _bb) { return GetRootAsServerEvent_ClientConnected(_bb, new ServerEvent_ClientConnected()); }
  public static ServerEvent_ClientConnected GetRootAsServerEvent_ClientConnected(ByteBuffer _bb, ServerEvent_ClientConnected obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ServerEvent_ClientConnected __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AUT_WH.MajorDomoProtocol.ClientInformation? Client { get { int o = __p.__offset(4); return o != 0 ? (AUT_WH.MajorDomoProtocol.ClientInformation?)(new AUT_WH.MajorDomoProtocol.ClientInformation()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent_ClientConnected> CreateServerEvent_ClientConnected(FlatBufferBuilder builder,
      Offset<AUT_WH.MajorDomoProtocol.ClientInformation> clientOffset = default(Offset<AUT_WH.MajorDomoProtocol.ClientInformation>)) {
    builder.StartTable(1);
    ServerEvent_ClientConnected.AddClient(builder, clientOffset);
    return ServerEvent_ClientConnected.EndServerEvent_ClientConnected(builder);
  }

  public static void StartServerEvent_ClientConnected(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddClient(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.ClientInformation> clientOffset) { builder.AddOffset(0, clientOffset.Value, 0); }
  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent_ClientConnected> EndServerEvent_ClientConnected(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // client
    return new Offset<AUT_WH.MajorDomoProtocol.ServerEvent_ClientConnected>(o);
  }
};

/// Event for a client that has disconnected
public struct ServerEvent_ClientDisconnected : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ServerEvent_ClientDisconnected GetRootAsServerEvent_ClientDisconnected(ByteBuffer _bb) { return GetRootAsServerEvent_ClientDisconnected(_bb, new ServerEvent_ClientDisconnected()); }
  public static ServerEvent_ClientDisconnected GetRootAsServerEvent_ClientDisconnected(ByteBuffer _bb, ServerEvent_ClientDisconnected obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ServerEvent_ClientDisconnected __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ClientUID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateClientUID(uint clientUID) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, clientUID); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent_ClientDisconnected> CreateServerEvent_ClientDisconnected(FlatBufferBuilder builder,
      uint clientUID = 0) {
    builder.StartTable(1);
    ServerEvent_ClientDisconnected.AddClientUID(builder, clientUID);
    return ServerEvent_ClientDisconnected.EndServerEvent_ClientDisconnected(builder);
  }

  public static void StartServerEvent_ClientDisconnected(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddClientUID(FlatBufferBuilder builder, uint clientUID) { builder.AddUint(0, clientUID, 0); }
  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent_ClientDisconnected> EndServerEvent_ClientDisconnected(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.ServerEvent_ClientDisconnected>(o);
  }
};

/// Event for when entities have been published
public struct ServerEvent_EntitiesPublished : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ServerEvent_EntitiesPublished GetRootAsServerEvent_EntitiesPublished(ByteBuffer _bb) { return GetRootAsServerEvent_EntitiesPublished(_bb, new ServerEvent_EntitiesPublished()); }
  public static ServerEvent_EntitiesPublished GetRootAsServerEvent_EntitiesPublished(ByteBuffer _bb, ServerEvent_EntitiesPublished obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ServerEvent_EntitiesPublished __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AUT_WH.MajorDomoProtocol.EntityInformation? Entities(int j) { int o = __p.__offset(4); return o != 0 ? (AUT_WH.MajorDomoProtocol.EntityInformation?)(new AUT_WH.MajorDomoProtocol.EntityInformation()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EntitiesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent_EntitiesPublished> CreateServerEvent_EntitiesPublished(FlatBufferBuilder builder,
      VectorOffset entitiesOffset = default(VectorOffset)) {
    builder.StartTable(1);
    ServerEvent_EntitiesPublished.AddEntities(builder, entitiesOffset);
    return ServerEvent_EntitiesPublished.EndServerEvent_EntitiesPublished(builder);
  }

  public static void StartServerEvent_EntitiesPublished(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddEntities(FlatBufferBuilder builder, VectorOffset entitiesOffset) { builder.AddOffset(0, entitiesOffset.Value, 0); }
  public static VectorOffset CreateEntitiesVector(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.EntityInformation>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEntitiesVectorBlock(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.EntityInformation>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntitiesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent_EntitiesPublished> EndServerEvent_EntitiesPublished(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.ServerEvent_EntitiesPublished>(o);
  }
};

/// Event for when entities have been revoked
public struct ServerEvent_EntitiesRevoked : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ServerEvent_EntitiesRevoked GetRootAsServerEvent_EntitiesRevoked(ByteBuffer _bb) { return GetRootAsServerEvent_EntitiesRevoked(_bb, new ServerEvent_EntitiesRevoked()); }
  public static ServerEvent_EntitiesRevoked GetRootAsServerEvent_EntitiesRevoked(ByteBuffer _bb, ServerEvent_EntitiesRevoked obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ServerEvent_EntitiesRevoked __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint EntityUIDs(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int EntityUIDsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<uint> GetEntityUIDsBytes() { return __p.__vector_as_span<uint>(4, 4); }
#else
  public ArraySegment<byte>? GetEntityUIDsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public uint[] GetEntityUIDsArray() { return __p.__vector_as_array<uint>(4); }
  public bool MutateEntityUIDs(int j, uint entityUIDs) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(__p.__vector(o) + j * 4, entityUIDs); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent_EntitiesRevoked> CreateServerEvent_EntitiesRevoked(FlatBufferBuilder builder,
      VectorOffset entityUIDsOffset = default(VectorOffset)) {
    builder.StartTable(1);
    ServerEvent_EntitiesRevoked.AddEntityUIDs(builder, entityUIDsOffset);
    return ServerEvent_EntitiesRevoked.EndServerEvent_EntitiesRevoked(builder);
  }

  public static void StartServerEvent_EntitiesRevoked(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddEntityUIDs(FlatBufferBuilder builder, VectorOffset entityUIDsOffset) { builder.AddOffset(0, entityUIDsOffset.Value, 0); }
  public static VectorOffset CreateEntityUIDsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateEntityUIDsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntityUIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent_EntitiesRevoked> EndServerEvent_EntitiesRevoked(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.ServerEvent_EntitiesRevoked>(o);
  }
};

/// Event for when entities are now owned by another client
public struct ServerEvent_EntitiesChangedClient : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ServerEvent_EntitiesChangedClient GetRootAsServerEvent_EntitiesChangedClient(ByteBuffer _bb) { return GetRootAsServerEvent_EntitiesChangedClient(_bb, new ServerEvent_EntitiesChangedClient()); }
  public static ServerEvent_EntitiesChangedClient GetRootAsServerEvent_EntitiesChangedClient(ByteBuffer _bb, ServerEvent_EntitiesChangedClient obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ServerEvent_EntitiesChangedClient __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ClientUID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateClientUID(uint clientUID) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, clientUID); return true; } else { return false; } }
  public uint EntityUIDs(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int EntityUIDsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<uint> GetEntityUIDsBytes() { return __p.__vector_as_span<uint>(6, 4); }
#else
  public ArraySegment<byte>? GetEntityUIDsBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public uint[] GetEntityUIDsArray() { return __p.__vector_as_array<uint>(6); }
  public bool MutateEntityUIDs(int j, uint entityUIDs) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutUint(__p.__vector(o) + j * 4, entityUIDs); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent_EntitiesChangedClient> CreateServerEvent_EntitiesChangedClient(FlatBufferBuilder builder,
      uint clientUID = 0,
      VectorOffset entityUIDsOffset = default(VectorOffset)) {
    builder.StartTable(2);
    ServerEvent_EntitiesChangedClient.AddEntityUIDs(builder, entityUIDsOffset);
    ServerEvent_EntitiesChangedClient.AddClientUID(builder, clientUID);
    return ServerEvent_EntitiesChangedClient.EndServerEvent_EntitiesChangedClient(builder);
  }

  public static void StartServerEvent_EntitiesChangedClient(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddClientUID(FlatBufferBuilder builder, uint clientUID) { builder.AddUint(0, clientUID, 0); }
  public static void AddEntityUIDs(FlatBufferBuilder builder, VectorOffset entityUIDsOffset) { builder.AddOffset(1, entityUIDsOffset.Value, 0); }
  public static VectorOffset CreateEntityUIDsVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateEntityUIDsVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntityUIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent_EntitiesChangedClient> EndServerEvent_EntitiesChangedClient(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.ServerEvent_EntitiesChangedClient>(o);
  }
};

/// Event for a client broadcast
public struct ServerEvent_ClientBroadcast : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ServerEvent_ClientBroadcast GetRootAsServerEvent_ClientBroadcast(ByteBuffer _bb) { return GetRootAsServerEvent_ClientBroadcast(_bb, new ServerEvent_ClientBroadcast()); }
  public static ServerEvent_ClientBroadcast GetRootAsServerEvent_ClientBroadcast(ByteBuffer _bb, ServerEvent_ClientBroadcast obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ServerEvent_ClientBroadcast __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint ClientUID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateClientUID(uint clientUID) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, clientUID); return true; } else { return false; } }
  public uint Identifier { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateIdentifier(uint identifier) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, identifier); return true; } else { return false; } }
  public sbyte Data(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetSbyte(__p.__vector(o) + j * 1) : (sbyte)0; }
  public int DataLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<sbyte> GetDataBytes() { return __p.__vector_as_span<sbyte>(8, 1); }
#else
  public ArraySegment<byte>? GetDataBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public sbyte[] GetDataArray() { return __p.__vector_as_array<sbyte>(8); }
  public bool MutateData(int j, sbyte data) { int o = __p.__offset(8); if (o != 0) { __p.bb.PutSbyte(__p.__vector(o) + j * 1, data); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent_ClientBroadcast> CreateServerEvent_ClientBroadcast(FlatBufferBuilder builder,
      uint clientUID = 0,
      uint identifier = 0,
      VectorOffset dataOffset = default(VectorOffset)) {
    builder.StartTable(3);
    ServerEvent_ClientBroadcast.AddData(builder, dataOffset);
    ServerEvent_ClientBroadcast.AddIdentifier(builder, identifier);
    ServerEvent_ClientBroadcast.AddClientUID(builder, clientUID);
    return ServerEvent_ClientBroadcast.EndServerEvent_ClientBroadcast(builder);
  }

  public static void StartServerEvent_ClientBroadcast(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddClientUID(FlatBufferBuilder builder, uint clientUID) { builder.AddUint(0, clientUID, 0); }
  public static void AddIdentifier(FlatBufferBuilder builder, uint identifier) { builder.AddUint(1, identifier, 0); }
  public static void AddData(FlatBufferBuilder builder, VectorOffset dataOffset) { builder.AddOffset(2, dataOffset.Value, 0); }
  public static VectorOffset CreateDataVector(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddSbyte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDataVectorBlock(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartDataVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent_ClientBroadcast> EndServerEvent_ClientBroadcast(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.ServerEvent_ClientBroadcast>(o);
  }
};

/// Event for when the server is about to shut down
public struct ServerEvent_ServerShutdown : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ServerEvent_ServerShutdown GetRootAsServerEvent_ServerShutdown(ByteBuffer _bb) { return GetRootAsServerEvent_ServerShutdown(_bb, new ServerEvent_ServerShutdown()); }
  public static ServerEvent_ServerShutdown GetRootAsServerEvent_ServerShutdown(ByteBuffer _bb, ServerEvent_ServerShutdown obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ServerEvent_ServerShutdown __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool Rebooting { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool MutateRebooting(bool rebooting) { int o = __p.__offset(4); if (o != 0) { __p.bb.Put(o + __p.bb_pos, (byte)(rebooting ? 1 : 0)); return true; } else { return false; } }

  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent_ServerShutdown> CreateServerEvent_ServerShutdown(FlatBufferBuilder builder,
      bool rebooting = false) {
    builder.StartTable(1);
    ServerEvent_ServerShutdown.AddRebooting(builder, rebooting);
    return ServerEvent_ServerShutdown.EndServerEvent_ServerShutdown(builder);
  }

  public static void StartServerEvent_ServerShutdown(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddRebooting(FlatBufferBuilder builder, bool rebooting) { builder.AddBool(0, rebooting, false); }
  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent_ServerShutdown> EndServerEvent_ServerShutdown(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.ServerEvent_ServerShutdown>(o);
  }
};

public struct ServerEvent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ServerEvent GetRootAsServerEvent(ByteBuffer _bb) { return GetRootAsServerEvent(_bb, new ServerEvent()); }
  public static ServerEvent GetRootAsServerEvent(ByteBuffer _bb, ServerEvent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ServerEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong Timestamp { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool MutateTimestamp(ulong timestamp) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUlong(o + __p.bb_pos, timestamp); return true; } else { return false; } }
  public AUT_WH.MajorDomoProtocol.UServerEvent EventType { get { int o = __p.__offset(6); return o != 0 ? (AUT_WH.MajorDomoProtocol.UServerEvent)__p.bb.Get(o + __p.bb_pos) : AUT_WH.MajorDomoProtocol.UServerEvent.NONE; } }
  public TTable? Event<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }

  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent> CreateServerEvent(FlatBufferBuilder builder,
      ulong timestamp = 0,
      AUT_WH.MajorDomoProtocol.UServerEvent event_type = AUT_WH.MajorDomoProtocol.UServerEvent.NONE,
      int eventOffset = 0) {
    builder.StartTable(3);
    ServerEvent.AddTimestamp(builder, timestamp);
    ServerEvent.AddEvent(builder, eventOffset);
    ServerEvent.AddEventType(builder, event_type);
    return ServerEvent.EndServerEvent(builder);
  }

  public static void StartServerEvent(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddTimestamp(FlatBufferBuilder builder, ulong timestamp) { builder.AddUlong(0, timestamp, 0); }
  public static void AddEventType(FlatBufferBuilder builder, AUT_WH.MajorDomoProtocol.UServerEvent eventType) { builder.AddByte(1, (byte)eventType, 0); }
  public static void AddEvent(FlatBufferBuilder builder, int eventOffset) { builder.AddOffset(2, eventOffset, 0); }
  public static Offset<AUT_WH.MajorDomoProtocol.ServerEvent> EndServerEvent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 8);  // event
    return new Offset<AUT_WH.MajorDomoProtocol.ServerEvent>(o);
  }
};

/// Information about a single modified entity
public struct EntityUpdate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static EntityUpdate GetRootAsEntityUpdate(ByteBuffer _bb) { return GetRootAsEntityUpdate(_bb, new EntityUpdate()); }
  public static EntityUpdate GetRootAsEntityUpdate(ByteBuffer _bb, EntityUpdate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EntityUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint EntityUID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateEntityUID(uint entityUID) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, entityUID); return true; } else { return false; } }
  public AUT_WH.MajorDomoProtocol.EntityValue? Values(int j) { int o = __p.__offset(6); return o != 0 ? (AUT_WH.MajorDomoProtocol.EntityValue?)(new AUT_WH.MajorDomoProtocol.EntityValue()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ValuesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<AUT_WH.MajorDomoProtocol.EntityUpdate> CreateEntityUpdate(FlatBufferBuilder builder,
      uint entityUID = 0,
      VectorOffset valuesOffset = default(VectorOffset)) {
    builder.StartTable(2);
    EntityUpdate.AddValues(builder, valuesOffset);
    EntityUpdate.AddEntityUID(builder, entityUID);
    return EntityUpdate.EndEntityUpdate(builder);
  }

  public static void StartEntityUpdate(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddEntityUID(FlatBufferBuilder builder, uint entityUID) { builder.AddUint(0, entityUID, 0); }
  public static void AddValues(FlatBufferBuilder builder, VectorOffset valuesOffset) { builder.AddOffset(1, valuesOffset.Value, 0); }
  public static VectorOffset CreateValuesVector(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.EntityValue>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateValuesVectorBlock(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.EntityValue>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.EntityUpdate> EndEntityUpdate(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.EntityUpdate>(o);
  }
};

/// Table with all modified entities of a specific client
public struct EntityUpdates : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static EntityUpdates GetRootAsEntityUpdates(ByteBuffer _bb) { return GetRootAsEntityUpdates(_bb, new EntityUpdates()); }
  public static EntityUpdates GetRootAsEntityUpdates(ByteBuffer _bb, EntityUpdates obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EntityUpdates __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong Timestamp { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool MutateTimestamp(ulong timestamp) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUlong(o + __p.bb_pos, timestamp); return true; } else { return false; } }
  public uint ClientUID { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool MutateClientUID(uint clientUID) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutUint(o + __p.bb_pos, clientUID); return true; } else { return false; } }
  public AUT_WH.MajorDomoProtocol.EntityUpdate? Updates(int j) { int o = __p.__offset(8); return o != 0 ? (AUT_WH.MajorDomoProtocol.EntityUpdate?)(new AUT_WH.MajorDomoProtocol.EntityUpdate()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int UpdatesLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<AUT_WH.MajorDomoProtocol.EntityUpdates> CreateEntityUpdates(FlatBufferBuilder builder,
      ulong timestamp = 0,
      uint clientUID = 0,
      VectorOffset updatesOffset = default(VectorOffset)) {
    builder.StartTable(3);
    EntityUpdates.AddTimestamp(builder, timestamp);
    EntityUpdates.AddUpdates(builder, updatesOffset);
    EntityUpdates.AddClientUID(builder, clientUID);
    return EntityUpdates.EndEntityUpdates(builder);
  }

  public static void StartEntityUpdates(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddTimestamp(FlatBufferBuilder builder, ulong timestamp) { builder.AddUlong(0, timestamp, 0); }
  public static void AddClientUID(FlatBufferBuilder builder, uint clientUID) { builder.AddUint(1, clientUID, 0); }
  public static void AddUpdates(FlatBufferBuilder builder, VectorOffset updatesOffset) { builder.AddOffset(2, updatesOffset.Value, 0); }
  public static VectorOffset CreateUpdatesVector(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.EntityUpdate>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateUpdatesVectorBlock(FlatBufferBuilder builder, Offset<AUT_WH.MajorDomoProtocol.EntityUpdate>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartUpdatesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AUT_WH.MajorDomoProtocol.EntityUpdates> EndEntityUpdates(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AUT_WH.MajorDomoProtocol.EntityUpdates>(o);
  }
};


}
